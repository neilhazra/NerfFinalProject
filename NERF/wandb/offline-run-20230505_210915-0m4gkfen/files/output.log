Traceback (most recent call last):
  File "/home/saumyam/NerfFinalProject/NERF/RunNerf.py", line 39, in <module>
    rendered_colors = training_forward_pass(model, origins.cuda(), ray_directions.cuda(), 2, 6, 100)
  File "/home/saumyam/NerfFinalProject/NERF/NERFFeedForwardModel.py", line 114, in training_forward_pass
    nerf_eval = evaluate_nerf_along_ray(model, ray, ray_direction)
  File "/home/saumyam/NerfFinalProject/NERF/NERFFeedForwardModel.py", line 88, in evaluate_nerf_along_ray
    return nerf_model(nn_in.view(-1, 6*L + 6)).view(batch_size, num_integration_points, 4)
  File "/home/saumyam/.conda/envs/nlp/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/saumyam/NerfFinalProject/NERF/NERFFeedForwardModel.py", line 21, in forward
    x = F.relu(x)
  File "/home/saumyam/.conda/envs/nlp/lib/python3.10/site-packages/torch/nn/functional.py", line 1457, in relu
    result = torch.relu(input)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 25.00 GiB (GPU 0; 79.32 GiB total capacity; 68.76 GiB already allocated; 10.06 GiB free; 68.77 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF